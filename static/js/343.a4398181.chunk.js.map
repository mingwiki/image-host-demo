{"version":3,"file":"static/js/343.a4398181.chunk.js","mappings":"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","sources":["components/Uploader.jsx","pages/Home.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport context from '../stores/index'\nimport { observer } from 'mobx-react'\nimport { Upload, Modal, message, Spin } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport {\n  UploaderWrapper,\n  UploadResultHeader,\n  UploadResult,\n  UploadResultLine,\n  Copy,\n} from './Styled'\n\nconst Component = observer(() => {\n  const { ImageStore, UserStore } = useContext(context)\n  const [previewVisible, setPreviewVisible] = useState(false)\n  const [previewImage, setPreviewImage] = useState('')\n  const [previewTitle, setPreviewTitle] = useState('')\n  const [fileList, setFilelist] = useState([])\n\n  let onCancel = () => setPreviewVisible(false)\n  let onPreview = (file) => {\n    setPreviewImage(file.url)\n    setPreviewVisible(true)\n    setPreviewTitle(\n      file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\n    )\n  }\n  let onRemove = (file) => {\n    setFilelist(fileList.filter((v) => v !== file))\n  }\n\n  // let customRequest = async ({ file }) => {\n  //   ImageStore.setFile(file);\n  //   ImageStore.setName(file.name);\n  //   if (!UserStore.currentUser) {\n  //     message.error(\"请先登录再上传\");\n  //     return;\n  //   }\n  //   try {\n  //     let img = await ImageStore.upload();\n  //     setFilelist((fileList) => [\n  //       ...fileList,\n  //       {\n  //         uid: file.uid,\n  //         name: file.name,\n  //         status: \"done\",\n  //         url: img.attributes.attachments[0].attributes.url,\n  //       },\n  //     ]);\n  //     console.log(\"文件上传成功\");\n  //   } catch (err) {\n  //     setFilelist((fileList) => [\n  //       ...fileList,\n  //       {\n  //         uid: file.uid,\n  //         name: file.name,\n  //         status: \"error\",\n  //       },\n  //     ]);\n  //     console.log(\"文件上传失败\", err);\n  //   }\n  // };\n  let customRequest = ({ file }) => {\n    ImageStore.setFile(file)\n    ImageStore.setName(file.name)\n    if (!UserStore.currentUser) {\n      message.error('请先登录再上传')\n      return\n    }\n    if (!/^(image\\/)/i.test(file.type)) {\n      message.error('请上传一张或多张任意类型图片')\n      return\n    }\n    if (file.size > 100 * 1024 * 1024) {\n      message.error('单张图片体积应小于100M')\n      return\n    }\n    ImageStore.upload().then(\n      (img) => {\n        setFilelist((fileList) => [\n          ...fileList,\n          {\n            uid: file.uid,\n            name: file.name,\n            status: 'done',\n            url: img.attributes.attachments[0].attributes.url,\n            width: '',\n            height: '',\n            fullurl: '',\n          },\n        ])\n        message.success('文件上传成功')\n      },\n      (err) => {\n        setFilelist((fileList) => [\n          ...fileList,\n          {\n            uid: file.uid,\n            name: file.name,\n            status: 'error',\n          },\n        ])\n        message.error('文件上传失败')\n        console.log('文件上传失败', err)\n      }\n    )\n  }\n  let handleWidth = (e, file) => {\n    file.width = isNaN(e.target.value) ? '' : e.target.value\n    file.fullurl =\n      file.url +\n      (file.width === '' && file.height === '' ? '' : '?/imageview2/0') +\n      (file.width !== '' ? `/w/${file.width}` : '') +\n      (file.height !== '' ? `/h/${file.height}` : '')\n    setFilelist([...fileList])\n  }\n  let handleHeight = (e, file) => {\n    file.height = isNaN(e.target.value) ? '' : e.target.value\n    file.fullurl =\n      file.url +\n      (file.width === '' && file.height === '' ? '' : '?/imageview2/0') +\n      (file.width !== '' ? `/w/${file.width}` : '') +\n      (file.height !== '' ? `/h/${file.height}` : '')\n    setFilelist([...fileList])\n  }\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>多文件上传</div>\n    </div>\n  )\n  return (\n    <UploaderWrapper>\n      <Spin spinning={ImageStore.isUploading} size=\"large\" tip=\"图片正在上传中\">\n        <Upload\n          listType=\"picture-card\"\n          fileList={fileList}\n          onPreview={onPreview}\n          onRemove={onRemove}\n          customRequest={customRequest}\n          multiple={true}\n        >\n          {uploadButton}\n        </Upload>\n        {fileList.length === 0 ? null : (\n          <>\n            <UploadResultHeader>上传结果</UploadResultHeader>\n            <UploadResult>\n              {fileList.map((file) => (\n                <UploadResultLine key={file.uid}>\n                  <a\n                    href={file.fullurl || file.url}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {file.name}\n                  </a>\n                  <input\n                    onChange={(e) => handleWidth(e, file)}\n                    placeholder=\"设置宽度：默认\"\n                  />\n                  <input\n                    onChange={(e) => handleHeight(e, file)}\n                    placeholder=\"设置长度：默认\"\n                  />\n                  <Copy\n                    onClick={(e) => {\n                      if (file.url) {\n                        navigator.clipboard.writeText(file.fullurl || file.url)\n                        e.target.innerText = '(链接已复制)'\n                      } else {\n                        navigator.clipboard.writeText(file.name)\n                        e.target.innerText = '(名称已复制)'\n                      }\n                      if (\n                        !e.target.className\n                          .toString()\n                          .split(' ')\n                          .includes('active')\n                      ) {\n                        e.target.className += ' active'\n                      }\n                    }}\n                  >\n                    {file.url ? '点击复制链接' : '点击复制名称'}\n                  </Copy>\n                </UploadResultLine>\n              ))}\n            </UploadResult>\n          </>\n        )}\n        <Modal\n          visible={previewVisible}\n          title={previewTitle}\n          footer={null}\n          onCancel={onCancel}\n        >\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </Spin>\n    </UploaderWrapper>\n  )\n})\n\nexport default Component\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport Uploader from '../components/Uploader'\nimport context from '../stores/index'\nimport { Tips, RedTips } from '../components/Styled'\nconst Component = observer(() => {\n  const { UserStore } = useContext(context)\n  return (\n    <>\n      {UserStore.currentUser ? (\n        <Tips>欢迎回来, {UserStore.currentUser.attributes.username}</Tips>\n      ) : (\n        <RedTips>请先登录再上传</RedTips>\n      )}\n      <Uploader />\n    </>\n  )\n})\n\nexport default Component\n"],"names":["observer","useContext","context","ImageStore","UserStore","useState","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFilelist","uploadButton","PlusOutlined","style","marginTop","spinning","isUploading","size","tip","listType","onPreview","file","url","name","substring","lastIndexOf","onRemove","filter","v","customRequest","setFile","setName","currentUser","test","type","message","upload","then","img","uid","status","attributes","attachments","width","height","fullurl","err","console","log","multiple","length","map","href","target","rel","onChange","e","isNaN","value","handleWidth","placeholder","handleHeight","onClick","navigator","clipboard","writeText","innerText","className","toString","split","includes","visible","title","footer","onCancel","alt","src","username","Uploader"],"sourceRoot":""}